,Node,Structure_Type,Structure_Name,Structure_Definition
0,as2dept1,Routing_Policy,dept_to_as2,"{'name': 'dept_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~dept_to_as2~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '102'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['65001:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map dept_to_as2 clause 100', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'dept_to_as2 100', 'structureType': 'route-map-clause'}}]}}]}]}"
1,host1,IP_Access_List,filter::INPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstPorts': ['53-53'], 'ipProtocols': ['UDP'], 'negate': False}}, 'name': '-p udp --dport 53 -j ACCEPT', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line -p udp --dport 53 -j ACCEPT'}]}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstPorts': ['22-22'], 'ipProtocols': ['TCP'], 'negate': False}}, 'name': '-p tcp --dport 22 -j ACCEPT', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line -p tcp --dport 22 -j ACCEPT'}]}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::INPUT'}"
2,as1border1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '1.1.1.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '1.1.1.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'1.10.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16843009, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~', 'routeReflectorClient': False}, 'localAs': 1, 'localIp': '1.1.1.1', 'peerAddress': '1.10.1.1', 'remoteAsns': '1'}, '3.2.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16843009, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'bad-ebgp', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': False, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~', 'routeReflectorClient': False}, 'localAs': 1, 'peerAddress': '3.2.2.2', 'remoteAsns': '666'}, '5.6.7.8': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16843009, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'xanadu', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': False, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~', 'routeReflectorClient': False}, 'localAs': 1, 'peerAddress': '5.6.7.8', 'remoteAsns': '555'}, '10.12.11.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16843009, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~', 'exportPolicySources': ['as1_to_as2'], 'importPolicy': 'as2_to_as1', 'importPolicySources': ['as2_to_as1'], 'routeReflectorClient': False}, 'localAs': 1, 'localIp': '10.12.11.1', 'peerAddress': '10.12.11.2', 'remoteAsns': '2'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
3,as2border1,Routing_Policy,as2_to_as3,"{'name': 'as2_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'outbound_routes'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 2', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as2_to_as3 2', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 1', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as2_to_as3 1', 'structureType': 'route-map-clause'}}]}}]}]}"
4,as1border1,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
5,as2border1,IP_Access_List,INSIDE_TO_AS1,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.0.0/8'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0/8'}}}, 'name': 'permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '10.12.11.1'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '10.12.11.2'}}}, 'name': 'permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip any any', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'INSIDE_TO_AS1: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'INSIDE_TO_AS1', 'sourceName': 'INSIDE_TO_AS1', 'sourceType': 'extended ipv4 access-list'}"
6,as2border2,Routing_Policy,as2_to_as3,"{'name': 'as2_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'outbound_routes'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 2', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as2_to_as3 2', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 1', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as2_to_as3 1', 'structureType': 'route-map-clause'}}]}}]}]}"
7,as2dist1,IP_Access_List,105,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '105', 'sourceName': '105', 'sourceType': 'extended ipv4 access-list'}"
8,as3core1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '3.10.1.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '3.10.1.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'3.1.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50987265, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~', 'routeReflectorClient': True}, 'localAs': 3, 'localIp': '3.10.1.1', 'peerAddress': '3.1.1.1', 'remoteAsns': '3'}, '3.2.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50987265, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~', 'routeReflectorClient': True}, 'localAs': 3, 'localIp': '3.10.1.1', 'peerAddress': '3.2.2.2', 'remoteAsns': '3'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
9,as1border2,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
10,host1,IP_Access_List,nat::POSTROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::POSTROUTING'}"
11,host2,IP_Access_List,nat::POSTROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::POSTROUTING'}"
12,as2dist1,Routing_Policy,as2dist_to_dept,"{'name': 'as2dist_to_dept', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2dist_to_dept~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '105'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:65001']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2dist_to_dept clause 100', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': 'as2dist_to_dept 100', 'structureType': 'route-map-clause'}}]}}]}]}"
13,host1,IP_Access_List,mangle::INPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::INPUT'}"
14,as2border1,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
15,as1border2,Routing_Policy,as1_to_as3,"{'name': 'as1_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '102'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 2', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as1_to_as3 2', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 1', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as1_to_as3 1', 'structureType': 'route-map-clause'}}]}}]}]}"
16,host2,IP_Access_List,mangle::INPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::INPUT'}"
17,as3border1,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '3.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
18,as2border1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet1/0', 'GigabitEthernet2/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.1.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.1.1', 'aggregates': [{'network': '2.128.0.0/16', 'suppressionPolicy': '~suppress~rp~summary-only~'}], 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.2.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620225, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.1.1', 'peerAddress': '2.1.2.1', 'remoteAsns': '2'}, '2.1.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620225, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.1.1', 'peerAddress': '2.1.2.2', 'remoteAsns': '2'}, '10.12.11.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620225, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~', 'exportPolicySources': ['as2_to_as1'], 'importPolicy': 'as1_to_as2', 'importPolicySources': ['as1_to_as2'], 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '10.12.11.2', 'peerAddress': '10.12.11.1', 'remoteAsns': '1'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
19,as3border2,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
20,as3border2,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
21,as2dept1,VRF,default,"{'name': 'default', 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.4.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.34.101.3': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620993, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~', 'exportPolicySources': ['dept_to_as2'], 'importPolicy': 'as2_to_dept', 'importPolicySources': ['as2_to_dept'], 'routeReflectorClient': False}, 'localAs': 65001, 'localIp': '2.34.101.4', 'peerAddress': '2.34.101.3', 'remoteAsns': '2'}, '2.34.201.3': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620993, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~', 'exportPolicySources': ['dept_to_as2'], 'importPolicy': 'as2_to_dept', 'importPolicySources': ['as2_to_dept'], 'routeReflectorClient': False}, 'localAs': 65001, 'localIp': '2.34.201.4', 'peerAddress': '2.34.201.3', 'remoteAsns': '2'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
22,as1border1,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
23,host2,IP_Access_List,mangle::PREROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::PREROUTING'}"
24,as1border2,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
25,as3border2,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
26,as1border2,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
27,host1,IP_Access_List,nat::PREROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::PREROUTING'}"
28,as1border1,Routing_Policy,as3_to_as1,"{'name': 'as3_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as3_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 100', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as3_to_as1 100', 'structureType': 'route-map-clause'}}]}}]}]}"
29,host2,IP_Access_List,nat::PREROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::PREROUTING'}"
30,host1,IP_Access_List,mangle::PREROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::PREROUTING'}"
31,as2border1,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
32,as3border2,Routing_Policy,as3_to_as2,"{'name': 'as3_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 3', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as3_to_as2 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 1', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as3_to_as2 1', 'structureType': 'route-map-clause'}}]}}]}]}"
33,as2border2,IP_Access_List,INSIDE_TO_AS3,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.0.0/8'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0/8'}}}, 'name': 'permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '10.23.21.3'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '10.23.21.2'}}}, 'name': 'permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip any any', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'INSIDE_TO_AS3: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'INSIDE_TO_AS3', 'sourceName': 'INSIDE_TO_AS3', 'sourceType': 'extended ipv4 access-list'}"
34,as2border1,Route_Filter_List,outbound_routes,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.128.0.0/9', 'lengthRange': '16-32'}], 'name': 'outbound_routes', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'outbound_routes', 'structureType': 'ipv4 prefix-list'}}"
35,as2dept1,IP_Access_List,105,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '105', 'sourceName': '105', 'sourceType': 'extended ipv4 access-list'}"
36,as1border1,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '1.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
37,as3border1,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
38,as1border1,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
39,as2dept1,IP_Access_List,RESTRICT_HOST_TRAFFIC_IN,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0/16'}}}, 'name': 'permit ip 2.128.0.0 0.0.255.255 any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip 2.128.0.0 0.0.255.255 any', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip any any', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'ipProtocols': ['ICMP'], 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'permit icmp any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit icmp any any', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: permit icmp any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_IN: permit icmp any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'RESTRICT_HOST_TRAFFIC_IN', 'sourceName': 'RESTRICT_HOST_TRAFFIC_IN', 'sourceType': 'extended ipv4 access-list'}"
40,as3border1,Routing_Policy,as3_to_as2,"{'name': 'as3_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~5~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'default_list'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 5', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as3_to_as2 5', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 3', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as3_to_as2 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 1', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as3_to_as2 1', 'structureType': 'route-map-clause'}}]}}]}]}"
41,host1,IP_Access_List,filter::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::OUTPUT'}"
42,as2dist1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.3.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.3.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.2.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620737, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.3.1', 'peerAddress': '2.1.2.1', 'remoteAsns': '2'}, '2.1.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620737, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.3.1', 'peerAddress': '2.1.2.2', 'remoteAsns': '2'}, '2.34.101.4': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620737, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'dept', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~', 'exportPolicySources': ['as2dist_to_dept'], 'importPolicy': 'dept_to_as2dist', 'importPolicySources': ['dept_to_as2dist'], 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.34.101.3', 'peerAddress': '2.34.101.4', 'remoteAsns': '65001'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
43,as2border2,Routing_Policy,as1_to_as2,"{'name': 'as1_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as1_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 100', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as1_to_as2 100', 'structureType': 'route-map-clause'}}]}}]}]}"
44,as2dist1,Route_Filter_List,105,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '105', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '105', 'structureType': 'extended ipv4 access-list'}}"
45,as3border2,Routing_Policy,as1_to_as3,"{'name': 'as1_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as1_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 100', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as1_to_as3 100', 'structureType': 'route-map-clause'}}]}}]}]}"
46,as2dist2,Community_Set_Match_Expr,dept_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )65001:'}}"
47,as2dist1,Community_Set_Match_Expr,dept_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )65001:'}}"
48,as3border1,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
49,as3border1,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
50,as3border1,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
51,as2dist1,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
52,as1border2,Routing_Policy,as4_to_as1,"{'name': 'as4_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as4_to_as1~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction', 'conjuncts': [{'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as4_community'}}, {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'as4-prefixes'}}]}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as4_to_as1 clause 100', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as4_to_as1 100', 'structureType': 'route-map-clause'}}]}}]}]}"
53,as2border2,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
54,as3border1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '3.1.1.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '3.1.1.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'3.10.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50397441, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~', 'routeReflectorClient': False}, 'localAs': 3, 'localIp': '3.1.1.1', 'peerAddress': '3.10.1.1', 'remoteAsns': '3'}, '10.23.21.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50397441, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~', 'exportPolicySources': ['as3_to_as2'], 'importPolicy': 'as2_to_as3', 'importPolicySources': ['as2_to_as3'], 'routeReflectorClient': False}, 'localAs': 3, 'localIp': '10.23.21.3', 'peerAddress': '10.23.21.2', 'remoteAsns': '2'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
55,as2border2,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
56,as3border2,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.0.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0'}}}, 'name': 'permit ip host 2.0.0.0 host 255.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.0.0.0 host 255.0.0.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
57,as2core2,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'GigabitEthernet2/0', 'GigabitEthernet3/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.2.2', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.2.2', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620482, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.2', 'peerAddress': '2.1.1.1', 'remoteAsns': '2'}, '2.1.1.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620482, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.2', 'peerAddress': '2.1.1.2', 'remoteAsns': '2'}, '2.1.3.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620482, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.2', 'peerAddress': '2.1.3.1', 'remoteAsns': '2'}, '2.1.3.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620482, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.2', 'peerAddress': '2.1.3.2', 'remoteAsns': '2'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
58,as2dept1,Route_Filter_List,102,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.128.0.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '2.128.1.0/24', 'lengthRange': '24-24'}], 'name': '102', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '102', 'structureType': 'extended ipv4 access-list'}}"
59,as2dist2,IP_Access_List,105,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '105', 'sourceName': '105', 'sourceType': 'extended ipv4 access-list'}"
60,as2border1,Routing_Policy,as1_to_as2,"{'name': 'as1_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as1_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 100', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as1_to_as2 100', 'structureType': 'route-map-clause'}}]}}]}]}"
61,as1border2,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
62,as3border2,Routing_Policy,as2_to_as3,"{'name': 'as2_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as2_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 100', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as2_to_as3 100', 'structureType': 'route-map-clause'}}]}}]}]}"
63,as1border2,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.0.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0'}}}, 'name': 'permit ip host 2.0.0.0 host 255.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.0.0.0 host 255.0.0.0', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
64,as1border1,Routing_Policy,as2_to_as1,"{'name': 'as2_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as2_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 100', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as2_to_as1 100', 'structureType': 'route-map-clause'}}]}}]}]}"
65,as3border1,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
66,as3border2,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
67,as2dept1,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.1.0'}}}, 'name': 'permit ip host 2.128.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '102: permit ip host 2.128.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': '102: permit ip host 2.128.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
68,as1border2,Routing_Policy,as3_to_as1,"{'name': 'as3_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as3_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 100', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as3_to_as1 100', 'structureType': 'route-map-clause'}}]}}]}]}"
69,host2,VRF,default,"{'name': 'default', 'staticRoutes': [{'class': 'org.batfish.datamodel.StaticRoute', 'administrativeCost': 1, 'metric': 0, 'network': '0.0.0.0/0', 'nextHopInterface': 'eth0', 'nextHopIp': '2.128.1.1', 'tag': -1}]}"
70,as2border1,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
71,as2border2,IP_Access_List,OUTSIDE_TO_INSIDE,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0/8'}}}, 'name': 'deny   ip 2.0.0.0 0.255.255.255 any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip 2.0.0.0 0.255.255.255 any', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'permit ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip any any', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'OUTSIDE_TO_INSIDE', 'sourceName': 'OUTSIDE_TO_INSIDE', 'sourceType': 'extended ipv4 access-list'}"
72,as2border2,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
73,as2dist2,Routing_Policy,as2dist_to_dept,"{'name': 'as2dist_to_dept', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2dist_to_dept~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '105'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:65001']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2dist_to_dept clause 100', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': 'as2dist_to_dept 100', 'structureType': 'route-map-clause'}}]}}]}]}"
74,as2dist2,Routing_Policy,dept_to_as2dist,"{'name': 'dept_to_as2dist', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~dept_to_as2dist~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'dept_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map dept_to_as2dist clause 100', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': 'dept_to_as2dist 100', 'structureType': 'route-map-clause'}}]}}]}]}"
75,as1border2,Community_Set_Match_Expr,as4_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )4:'}}"
76,host2,IP_Access_List,nat::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::OUTPUT'}"
77,host1,IP_Access_List,nat::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'nat::OUTPUT'}"
78,as2border2,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
79,as1core1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '1.10.1.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '1.10.1.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'1.1.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 17432833, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~', 'routeReflectorClient': True}, 'localAs': 1, 'localIp': '1.10.1.1', 'peerAddress': '1.1.1.1', 'remoteAsns': '1'}, '1.2.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 17432833, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~', 'routeReflectorClient': True}, 'localAs': 1, 'localIp': '1.10.1.1', 'peerAddress': '1.2.2.2', 'remoteAsns': '1'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
80,as2border2,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet1/0', 'GigabitEthernet2/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.1.2', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.1.2', 'aggregates': [{'network': '2.128.0.0/16', 'suppressionPolicy': '~suppress~rp~summary-only~'}], 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.2.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620226, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.1.2', 'peerAddress': '2.1.2.1', 'remoteAsns': '2'}, '2.1.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620226, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.1.2', 'peerAddress': '2.1.2.2', 'remoteAsns': '2'}, '10.23.21.3': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620226, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~', 'exportPolicySources': ['as2_to_as3'], 'importPolicy': 'as3_to_as2', 'importPolicySources': ['as3_to_as2'], 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '10.23.21.2', 'peerAddress': '10.23.21.3', 'remoteAsns': '3'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
81,as1border1,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
82,as2dept1,Routing_Policy,as2_to_dept,"{'name': 'as2_to_dept', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_dept~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as2_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_dept clause 100', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'as2_to_dept 100', 'structureType': 'route-map-clause'}}]}}]}]}"
83,as1border2,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
84,host1,IP_Access_List,mangle::POSTROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::POSTROUTING'}"
85,as1border2,Routing_Policy,as2_to_as1,"{'name': 'as2_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as2_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 100', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as2_to_as1 100', 'structureType': 'route-map-clause'}}]}}]}]}"
86,host2,IP_Access_List,mangle::POSTROUTING,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::POSTROUTING'}"
87,as3border1,Routing_Policy,as2_to_as3,"{'name': 'as2_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as3~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as2_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as3 clause 100', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as2_to_as3 100', 'structureType': 'route-map-clause'}}]}}]}]}"
88,as3border1,Route_Filter_List,103,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '103', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '103', 'structureType': 'extended ipv4 access-list'}}"
89,as3border2,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
90,as3border1,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
91,as3border1,Route_Filter_List,default_list,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-0'}], 'name': 'default_list', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'default_list', 'structureType': 'ipv4 prefix-list'}}"
92,as1border1,Route_Filter_List,102,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-8'}, {'action': 'PERMIT', 'ipWildcard': '2.128.0.0/16', 'lengthRange': '16-16'}], 'name': '102', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '102', 'structureType': 'extended ipv4 access-list'}}"
93,host2,IP_Access_List,filter::FORWARD,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::FORWARD'}"
94,as2border2,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
95,as1border2,Routing_Policy,as1_to_as2,"{'name': 'as1_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 3', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as1_to_as2 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 1', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as1_to_as2 1', 'structureType': 'route-map-clause'}}]}}]}]}"
96,as2border2,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
97,host1,IP_Access_List,filter::FORWARD,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::FORWARD'}"
98,as1border1,Route_Filter_List,default_list,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-0'}], 'name': 'default_list', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'default_list', 'structureType': 'ipv4 prefix-list'}}"
99,as1border1,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.0.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0'}}}, 'name': 'permit ip host 2.0.0.0 host 255.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.0.0.0 host 255.0.0.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
100,as2border1,IP_Access_List,OUTSIDE_TO_INSIDE,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0/8'}}}, 'name': 'deny   ip 2.0.0.0 0.255.255.255 any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip 2.0.0.0 0.255.255.255 any', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.1.101'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   ip any host 2.128.1.101', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip any host 2.128.1.101', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip any host 2.128.1.101', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: deny   ip any host 2.128.1.101', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'permit ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip any any', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'OUTSIDE_TO_INSIDE: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'OUTSIDE_TO_INSIDE', 'sourceName': 'OUTSIDE_TO_INSIDE', 'sourceType': 'extended ipv4 access-list'}"
101,as2dept1,IP_Access_List,RESTRICT_HOST_TRAFFIC_OUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0/16'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'permit ip any 2.128.0.0 0.0.255.255', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip any 2.128.0.0 0.0.255.255', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0/16'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.128.0.0/16'}}}, 'name': 'deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   ip any any', 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dept1.cfg', 'structureName': 'RESTRICT_HOST_TRAFFIC_OUT: deny   ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'RESTRICT_HOST_TRAFFIC_OUT', 'sourceName': 'RESTRICT_HOST_TRAFFIC_OUT', 'sourceType': 'extended ipv4 access-list'}"
102,as1border1,Routing_Policy,as1_to_as3,"{'name': 'as1_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '102'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 2', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as1_to_as3 2', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:3']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 1', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as1_to_as3 1', 'structureType': 'route-map-clause'}}]}}]}]}"
103,host2,IP_Access_List,mangle::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::OUTPUT'}"
104,host1,IP_Access_List,mangle::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::OUTPUT'}"
105,as1border2,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '1.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
106,as3border1,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.0.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.0.0.0'}}}, 'name': 'permit ip host 2.0.0.0 host 255.0.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.0.0.0 host 255.0.0.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '102: permit ip host 2.0.0.0 host 255.0.0.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
107,host1,IP_Access_List,mangle::FORWARD,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::FORWARD'}"
108,as1border1,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
109,as2border2,Routing_Policy,as3_to_as2,"{'name': 'as3_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as3_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 100', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as3_to_as2 100', 'structureType': 'route-map-clause'}}]}}]}]}"
110,host2,IP_Access_List,mangle::FORWARD,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'mangle::FORWARD'}"
111,as2dist2,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.3.2', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.3.2', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.2.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620738, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.3.2', 'peerAddress': '2.1.2.1', 'remoteAsns': '2'}, '2.1.2.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620738, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~', 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.1.3.2', 'peerAddress': '2.1.2.2', 'remoteAsns': '2'}, '2.34.201.4': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620738, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'dept', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~', 'exportPolicySources': ['as2dist_to_dept'], 'importPolicy': 'dept_to_as2dist', 'importPolicySources': ['dept_to_as2dist'], 'routeReflectorClient': False}, 'localAs': 2, 'localIp': '2.34.201.3', 'peerAddress': '2.34.201.4', 'remoteAsns': '65001'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
112,as2dist2,Route_Filter_List,105,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '3.0.2.0/24', 'lengthRange': '24-24'}], 'name': '105', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '105', 'structureType': 'extended ipv4 access-list'}}"
113,as2dist1,Routing_Policy,dept_to_as2dist,"{'name': 'dept_to_as2dist', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~dept_to_as2dist~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'dept_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map dept_to_as2dist clause 100', 'vendorStructureId': {'filename': 'configs/as2dist1.cfg', 'structureName': 'dept_to_as2dist 100', 'structureType': 'route-map-clause'}}]}}]}]}"
114,as2core1,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet0/0', 'GigabitEthernet1/0', 'GigabitEthernet2/0', 'GigabitEthernet3/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '2.1.2.1', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '2.1.2.1', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'2.1.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620481, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.1', 'peerAddress': '2.1.1.1', 'remoteAsns': '2'}, '2.1.1.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620481, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.1', 'peerAddress': '2.1.1.2', 'remoteAsns': '2'}, '2.1.3.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620481, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.1', 'peerAddress': '2.1.3.1', 'remoteAsns': '2'}, '2.1.3.2': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 33620481, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as2', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~', 'routeReflectorClient': True}, 'localAs': 2, 'localIp': '2.1.2.1', 'peerAddress': '2.1.3.2', 'remoteAsns': '2'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
115,as2border2,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
116,host2,IP_Access_List,filter::OUTPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.101'}, 'negate': False}}, 'name': '-d 2.128.0.101 -j DROP', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line -d 2.128.0.101 -j DROP'}]}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::OUTPUT'}"
117,host2,IP_Access_List,filter::INPUT,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstPorts': ['22-22'], 'ipProtocols': ['TCP'], 'negate': False}}, 'name': '-p tcp --dport 22 -j ACCEPT', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line -p tcp --dport 22 -j ACCEPT'}]}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.TrueExpr'}, 'name': 'default', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line default'}]}}], 'name': 'filter::INPUT'}"
118,as3border1,Route_Filter_List,102,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-8'}, {'action': 'PERMIT', 'ipWildcard': '2.128.0.0/16', 'lengthRange': '16-16'}], 'name': '102', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': '102', 'structureType': 'extended ipv4 access-list'}}"
119,as3border1,Routing_Policy,as3_to_as1,"{'name': 'as3_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 3', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as3_to_as1 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '102'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 2', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as3_to_as1 2', 'structureType': 'route-map-clause'}}]}}]}]}"
120,as1border1,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
121,as1border2,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
122,as2border2,Route_Filter_List,outbound_routes,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.128.0.0/9', 'lengthRange': '16-32'}], 'name': 'outbound_routes', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'outbound_routes', 'structureType': 'ipv4 prefix-list'}}"
123,as2border2,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
124,host1,VRF,default,"{'name': 'default', 'staticRoutes': [{'class': 'org.batfish.datamodel.StaticRoute', 'administrativeCost': 1, 'metric': 0, 'network': '0.0.0.0/0', 'nextHopInterface': 'eth0', 'nextHopIp': '2.128.0.1', 'tag': -1}]}"
125,as2border1,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
126,as1border2,Routing_Policy,as1_to_as4,"{'name': 'as1_to_as4', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:4']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as4 clause 2', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as1_to_as4 2', 'structureType': 'route-map-clause'}}]}}]}"
127,as3border2,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '3.2.2.2', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '3.2.2.2', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'3.10.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50463234, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~', 'routeReflectorClient': False}, 'localAs': 3, 'localIp': '3.2.2.2', 'peerAddress': '3.10.1.1', 'remoteAsns': '3'}, '10.13.22.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 50463234, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~', 'exportPolicySources': ['as3_to_as1'], 'importPolicy': 'as1_to_as3', 'importPolicySources': ['as1_to_as3'], 'routeReflectorClient': False}, 'localAs': 3, 'localIp': '10.13.22.3', 'peerAddress': '10.13.22.1', 'remoteAsns': '1'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
128,as2border1,Community_Set_Match_Expr,as3_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )3:'}}"
129,as1border2,VRF,default,"{'name': 'default', 'ospfProcesses': {'1': {'adminCosts': {'ospf': 110, 'ospfE1': 110, 'ospfE2': 110, 'ospfIA': 110, 'ospfIS': 110}, 'areas': {'1': {'injectDefaultRoute': True, 'interfaces': ['GigabitEthernet1/0', 'Loopback0'], 'metricOfDefaultRoute': 0, 'name': 1, 'stubType': 'NONE'}}, 'exportPolicy': '~OSPF_EXPORT_POLICY:default:1~', 'processId': '1', 'referenceBandwidth': 100000000.0, 'routerId': '1.2.2.2', 'summaryAdminCost': 254, 'summaryDiscardMetric': 0}}, 'bgpProcess': {'ebgpAdminCost': 20, 'ibgpAdminCost': 200, 'localAdminCost': 200, 'localOriginationTypeTieBreaker': 'NO_PREFERENCE', 'networkNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributeNextHopIpTieBreaker': 'HIGHEST_NEXT_HOP_IP', 'redistributionPolicy': '~BGP_REDISTRIBUTION_POLICY:default~', 'routerId': '1.2.2.2', 'clusterListAsIbgpCost': True, 'multipathEbgp': True, 'multipathEquivalentAsPathMatchMode': 'EXACT_PATH', 'multipathIbgp': True, 'neighbors': {'1.10.1.1': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16908802, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as1', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~', 'routeReflectorClient': False}, 'localAs': 1, 'localIp': '1.2.2.2', 'peerAddress': '1.10.1.1', 'remoteAsns': '1'}, '10.13.22.3': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16908802, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as3', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': True, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~', 'exportPolicySources': ['as1_to_as3'], 'importPolicy': 'as3_to_as1', 'importPolicySources': ['as3_to_as1'], 'routeReflectorClient': False}, 'localAs': 1, 'localIp': '10.13.22.1', 'peerAddress': '10.13.22.3', 'remoteAsns': '3'}, '10.14.22.4': {'class': 'org.batfish.datamodel.BgpActivePeerConfig', 'clusterId': 16908802, 'defaultMetric': 0, 'ebgpMultihop': False, 'enforceFirstAs': True, 'group': 'as4', 'ipv4UnicastAddressFamily': {'addressFamilyCapabilities': {'additionalPathsReceive': True, 'additionalPathsSelectAll': True, 'additionalPathsSend': True, 'advertiseExternal': False, 'advertiseInactive': True, 'allowLocalAsIn': False, 'allowRemoteAsOut': 'ALWAYS', 'sendCommunity': False, 'sendExtendedCommunity': False}, 'exportPolicy': '~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~', 'exportPolicySources': ['as1_to_as4'], 'importPolicy': 'as4_to_as1', 'importPolicySources': ['as4_to_as1'], 'routeReflectorClient': False}, 'localAs': 1, 'localIp': '10.14.22.1', 'peerAddress': '10.14.22.4', 'remoteAsns': '4'}}, 'tieBreaker': 'ARRIVAL_ORDER'}, 'resolutionPolicy': '~RESOLUTION_POLICY~'}"
130,as2border1,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
131,as1border1,Route_Filter_List,101,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '1.0.1.0/24', 'lengthRange': '24-24'}, {'action': 'PERMIT', 'ipWildcard': '1.0.2.0/24', 'lengthRange': '24-24'}], 'name': '101', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': '101', 'structureType': 'extended ipv4 access-list'}}"
132,as3border2,Routing_Policy,as3_to_as1,"{'name': 'as3_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as1~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 3', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as3_to_as1 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '102'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as1 clause 2', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'as3_to_as1 2', 'structureType': 'route-map-clause'}}]}}]}]}"
133,as2dept1,Community_Set_Match_Expr,as2_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )2:'}}"
134,as3border1,Routing_Policy,as1_to_as3,"{'name': 'as1_to_as3', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as3~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as1_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as3 clause 100', 'vendorStructureId': {'filename': 'configs/as3border1.cfg', 'structureName': 'as1_to_as3 100', 'structureType': 'route-map-clause'}}]}}]}]}"
135,as2border1,Routing_Policy,as2_to_as1,"{'name': 'as2_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 3', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as2_to_as1 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'outbound_routes'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 2', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as2_to_as1 2', 'structureType': 'route-map-clause'}}]}}]}]}"
136,as2border2,Routing_Policy,as2_to_as1,"{'name': 'as2_to_as1', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~2~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as2_to_as1~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 3', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as2_to_as1 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'outbound_routes'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['2:1']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as2_to_as1 clause 2', 'vendorStructureId': {'filename': 'configs/as2border2.cfg', 'structureName': 'as2_to_as1 2', 'structureType': 'route-map-clause'}}]}}]}]}"
137,as2border1,Community_Set_Match_Expr,as1_community,"{'expr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex', 'communityRendering': {'class': 'org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering'}, 'regex': '(,|\\{|\\}|^|$| )1:'}}"
138,as1border2,Route_Filter_List,as4-prefixes,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '4.0.0.0/8', 'lengthRange': '8-32'}], 'name': 'as4-prefixes', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': 'as4-prefixes', 'structureType': 'ipv4 prefix-list'}}"
139,as3border2,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
140,as2border1,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
141,as1border2,Route_Filter_List,102,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-8'}, {'action': 'PERMIT', 'ipWildcard': '2.128.0.0/16', 'lengthRange': '16-16'}], 'name': '102', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '102', 'structureType': 'extended ipv4 access-list'}}"
142,as3border2,Route_Filter_List,inbound_route_filter,"{'lines': [{'action': 'DENY', 'ipWildcard': '3.0.0.0/8', 'lengthRange': '8-32'}, {'action': 'PERMIT', 'ipWildcard': '0.0.0.0/0', 'lengthRange': '0-32'}], 'name': 'inbound_route_filter', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': 'inbound_route_filter', 'structureType': 'ipv4 prefix-list'}}"
143,as2dist2,IP_Access_List,102,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.0.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '2.128.0.0'}}}, 'name': 'permit ip host 2.128.0.0 host 255.255.0.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 2.128.0.0 host 255.255.0.0', 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2dist2.cfg', 'structureName': '102: permit ip host 2.128.0.0 host 255.255.0.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '102', 'sourceName': '102', 'sourceType': 'extended ipv4 access-list'}"
144,as3border2,IP_Access_List,103,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.1.0'}}}, 'name': 'permit ip host 3.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '103: permit ip host 3.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '3.0.2.0'}}}, 'name': 'permit ip host 3.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 3.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '103: permit ip host 3.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '103', 'sourceName': '103', 'sourceType': 'extended ipv4 access-list'}"
145,as3border2,Route_Filter_List,102,"{'lines': [{'action': 'PERMIT', 'ipWildcard': '2.0.0.0/8', 'lengthRange': '8-8'}, {'action': 'PERMIT', 'ipWildcard': '2.128.0.0/16', 'lengthRange': '16-16'}], 'name': '102', 'vendorStructureId': {'filename': 'configs/as3border2.cfg', 'structureName': '102', 'structureType': 'extended ipv4 access-list'}}"
146,as2core1,IP_Access_List,blocktelnet,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'DENY', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'dstPorts': ['23-23'], 'ipProtocols': ['TCP'], 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'deny   tcp any any eq telnet', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'deny   tcp any any eq telnet', 'vendorStructureId': {'filename': 'configs/as2core1.cfg', 'structureName': 'blocktelnet: deny   tcp any any eq telnet', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2core1.cfg', 'structureName': 'blocktelnet: deny   tcp any any eq telnet', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '0.0.0.0/0'}}}, 'name': 'permit ip any any', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip any any', 'vendorStructureId': {'filename': 'configs/as2core1.cfg', 'structureName': 'blocktelnet: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as2core1.cfg', 'structureName': 'blocktelnet: permit ip any any', 'structureType': 'extended ipv4 access-list line'}}], 'name': 'blocktelnet', 'sourceName': 'blocktelnet', 'sourceType': 'extended ipv4 access-list'}"
147,as2border1,Routing_Policy,as3_to_as2,"{'name': 'as3_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as3_to_as2~100~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.communities.MatchCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, 'communitySetMatchExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference', 'name': 'as3_community'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetLocalPreference', 'localPreference': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 350}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['3:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as3_to_as2 clause 100', 'vendorStructureId': {'filename': 'configs/as2border1.cfg', 'structureName': 'as3_to_as2 100', 'structureType': 'route-map-clause'}}]}}]}]}"
148,as1border2,IP_Access_List,101,"{'lines': [{'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.1.0'}}}, 'name': 'permit ip host 1.0.1.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.1.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '101: permit ip host 1.0.1.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}, {'class': 'org.batfish.datamodel.ExprAclLine', 'action': 'PERMIT', 'matchCondition': {'class': 'org.batfish.datamodel.acl.MatchHeaderSpace', 'headerSpace': {'dstIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '255.255.255.0'}, 'negate': False, 'srcIps': {'class': 'org.batfish.datamodel.IpWildcardIpSpace', 'ipWildcard': '1.0.2.0'}}}, 'name': 'permit ip host 1.0.2.0 host 255.255.255.0', 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched line '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'permit ip host 1.0.2.0 host 255.255.255.0', 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}]}, 'vendorStructureId': {'filename': 'configs/as1border2.cfg', 'structureName': '101: permit ip host 1.0.2.0 host 255.255.255.0', 'structureType': 'extended ipv4 access-list line'}}], 'name': '101', 'sourceName': '101', 'sourceType': 'extended ipv4 access-list'}"
149,as1border1,Routing_Policy,as1_to_as2,"{'name': 'as1_to_as2', 'statements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~1~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~3~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.If', 'comment': '~RMCLAUSE~as1_to_as2~5~', 'falseStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnLocalDefaultAction'}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': 'default_list'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 5', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as1_to_as2 5', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '103'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 3', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as1_to_as2 3', 'structureType': 'route-map-clause'}}]}}]}], 'guard': {'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.NamedPrefixSet', 'name': '101'}}, 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.TraceableStatement', 'innerStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric', 'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 50}}, {'class': 'org.batfish.datamodel.routing_policy.communities.SetCommunities', 'communitySetExpr': {'class': 'org.batfish.datamodel.routing_policy.communities.CommunitySetUnion', 'exprs': [{'class': 'org.batfish.datamodel.routing_policy.communities.InputCommunities'}, {'class': 'org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet', 'communitySet': ['1:2']}]}}, {'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement', 'type': 'ReturnTrue'}], 'traceElement': {'fragments': [{'class': 'org.batfish.datamodel.TraceElement$TextFragment', 'text': 'Matched '}, {'class': 'org.batfish.datamodel.TraceElement$LinkFragment', 'text': 'route-map as1_to_as2 clause 1', 'vendorStructureId': {'filename': 'configs/as1border1.cfg', 'structureName': 'as1_to_as2 1', 'structureType': 'route-map-clause'}}]}}]}]}"
